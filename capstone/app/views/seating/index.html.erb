<!DOCTYPE html>
<html>
<head>
  <title>Your Day Your Way</title>
  <%= stylesheet_link_tag "seating.css.scss" %>
  <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
</head>
<header>
  <a href="/home"><img id="logo" src="../../assets/logo2.png"></a>
  <% if @log == true %>
      <div id="logout">
        <a href="/">Log out</a>
      </div>
  <% end %>
  <h1 id="message"><%= @message %></h1>
  <nav>
    <% if @log == true %>
        <ul id="menu">
          <li><a href="/home">Home</a></li>
          <li><a href="/vendors">Vendors</a>
            <ul class="submenu">
              <li><a href="/dj">DJ</a></li>
              <li><a href="/officiant">Officiants</a></li>
              <li><a href="/transportation">Transportation</a></li>
              <li><a href="/cater">Catering</a></li>
              <li><a href="/decoration">Decorations</a></li>
              <li><a href="/flowers">Flowers</a></li>
              <li><a href="/photographer">Photography/Videography</a></li>
              <li><a href="/venue">Venue</a></li>
            </ul>
          </li>
          <li><a href="/budget">Budget</a></li>
          <li><a href="/invite">Invitation Tracker</a>
            <ul class="submenu">
              <li><a href="/invite">Guest List</a></li>
              <li><a href="/createInvites">Create Invites</a></li>
            </ul>
          </li>
          <li><a href="/registry">Registry</a></li>
          <li><a href="/color">Important Dates</a>
          <li id="active"><a href="/seating">Seating</a></li>
          <li><a href="/attire">Attire</a>
            <ul class="submenu">
              <li><a href="">Bride</a></li>
              <li><a href="">Bridesmaids</a></li>
              <li><a href="">Groom</a></li>
              <li><a href="">Groomsmen</a></li>
              <li><a href="">Accessories</a></li>
            </ul>
          </li>
        </ul>
    <% end %>
  </nav>
</header>
<body onload="drawBoard()">
  <section id="sizer">
    <p>Enter room width: <input value="600" min="0" type="number" name="width" id="width">ft and length: <input value="500" min="0" type="number" name="length" id="length">ft (each square will be 10 square feet) <input type="button" name="create_grid" id="create_grid" onclick="drawBoard()" value="Set"></p>
  </section>
  <section id="seating">
    <section id="left">
      <aside id="guest_list">
        <p>Guest List</p>
        <h3 id="hint">(Click and Drag to Tables)</h3>
        <section id="guest">
          <% @guest_lists.each do |guest_list| %>
              <ul id="gl">
                <% @all.each do |guest| %>
                    <% if guest.group_id == guest_list.group_id %>
                        <% @numInGroup += 1 %>
                    <% end %>
                <% end %>
                <% if @numInGroup == 1 %>
                    <% if guest_list.assigned != '0' %>
                        <% @tables.each do |tab| %>
                          <% if Integer(tab.id) == Integer(guest_list.assigned) %>
                                <li style="background-color: #999999"><%= guest_list.name %> <br>(assigned to table: <%= tab.name %>)</li>
                                <button>Unassign</button>
                          <% end %>
                        <% end %>
                    <% else %>
                        <li ondragstart="startDragging('<%= guest_list.id %>')"><%= guest_list.name %></li>
                    <% end %>
                <% else %>
                    <% if guest_list.assigned != '0' %>
                        <% @tables.each do |tab| %>
                            <% if Integer(tab.id) == Integer(guest_list.assigned) %>
                                <li style="background-color: #999999"><%= guest_list.name %> + <%= @numInGroup-1 %> <br> (assigned to table: <%= tab.name %>)</li>
                                <button>Unassign</button>
                            <% end %>
                        <% end %>
                    <% else %>
                        <li ondragstart="startDragging('<%= guest_list.id %>')"><%= guest_list.name %> + <%= @numInGroup-1 %></li>
                    <% end %>
                <% end %>
                <% @numInGroup = 0 %>
              </ul>
          <% end %>
          <!--<div id="dropem" style="background-color: #DADADA; height: 100px;"></div>-->
        </section>
      </aside>
      <section id="add">
        <%= link_to '+ Add Guest', new_guest_list_path, :id => 'add_guest' %>
      </section>
    </section>
    <section id="scrollable">
      <canvas id="grid" width="1208" height="1008">
      </canvas>
      <canvas id="tables" width="1208" height="1008">
      </canvas>
    </section>

    <script>

      var guestDrag = false;
      var guestId = 0;

      $( "#gl li" ).draggable({
        appendTo: "body",
        helper: "clone"
      });

      function startDragging(id)
      {
        guestId = id;
        console.log(id);
        guestDrag = true;
      }

      function endDrag()
      {
        guestDrag = false;
      }

      $( "#dropem" ).droppable({
        activeClass: "ui-state-default",
        hoverClass: "ui-state-hover",
        accept: ":not(.ui-sortable-helper)",
        drop: function( event, ui ) {
          $( this ).find( ".placeholder" ).remove();
          $( "<li></li>" ).text( ui.draggable.text() ).appendTo( this );
        }
      });

      var c = new fabric.Canvas('tables');

      function drawBoard(){
        var bw = Number(document.getElementById("width").value);
        var bh = Number(document.getElementById("length").value);
        var p = 3;
        var canvas = document.getElementById("grid");
        var context = canvas.getContext("2d");
        canvas.width = canvas.width;
        canvas.height = canvas.height;

        context.clearRect(0,0,canvas.width, canvas.height);

        for (var x = 0; x <= bw*2; x += 20) {
          context.moveTo(0 + x + p, p);
          context.lineTo(0 + x + p, bh*2 + p);
        }

        for (var x = 0; x <= bh*2; x += 20) {
          context.moveTo(p, 0.5 + x + p);
          context.lineTo(bw*2 + p, 0.5 + x + p);
        }

        context.strokeStyle = 'rgba(0,0,0,0.3)';
        context.stroke();
      }

      function create(type, name, pos, size, id, seats)
      {
        var sizes = size.split(":");
        var positions = pos.split(":");
        var table;
        var text = new fabric.Text(name, {
          fontSize: 40,
          originX: 'center',
          originY: 'center',
          fill: '#fff',
          fontFamily: 'Didact',
          stroke: '000',
          strokeWidth:.5
        });
        switch(type)
        {
          case "circle":
            table = new fabric.Circle({
              radius: Number(sizes[0]),
              fill: '#AB1E3E',
              originX: 'center',
              originY: 'center',
              stroke: "black",
              strokeWidth: 2
            });
                break;
          case "rec":
            table = new fabric.Rect({
              width: Number(sizes[0]),
              height: Number(sizes[1]),
              fill: '#AB1E3E',
              originX: 'center',
              originY: 'center',
              stroke: "black",
              strokeWidth: 2
            });
                break;
          case "head":
            table = new fabric.Rect({
              width: Number(sizes[0]),
              height: Number(sizes[1]),
              fill: '#AB1E3E',
              originX: 'center',
              originY: 'center',
              stroke: "black",
              strokeWidth: 2
            });
                break;
          default:
                break;
        }

        var group = new fabric.Group([ table, text ], {
          left: Number(positions[0]),
          top: Number(positions[1]),
          angle: Number(positions[2])
        });


        group.toObject = (function(toObject) {
          return function() {
            return fabric.util.object.extend(toObject.call(this), {
              name: this.name,
              kind: this.kind,
              id: this.id,
              seats: this.seats,
              bug: this.bug
            });
          };
        })(group.toObject);

        group.name = name;
        group.kind = type;
        group.id = id;
        group.seats = seats;

        for(var i = 0; i < Number(seats); i++)
        {
          if(type == 'head')
          {
            var top = 0 - ((group.height/2)+25);
            var left = (group.width/(Number(seats)+1))*i;
            group.add(new fabric.Circle({
              radius: 15,
              fill: '#AB1E3E',
              left: (left - group.width/2)+(group.width/(Number(seats)+1)),
              top: top,
              originX: 'center',
              originY: 'center',
              stroke: "black",
              strokeWidth: 2
            }));
          }
          if(type == 'rec')
          {
            if(i == 0)
            {
              var left = 0 - ((group.width/2)+25);
              group.add(new fabric.Circle({
                radius: 15,
                fill: '#AB1E3E',
                left: left,
                top: 0,
                originX: 'center',
                originY: 'center',
                stroke: "black",
                strokeWidth: 2
              }));
            }
            else if(i == 1)
            {
              var left = ((group.width/2)+25);
              group.add(new fabric.Circle({
                radius: 15,
                fill: '#AB1E3E',
                left: left,
                top: 0,
                originX: 'center',
                originY: 'center',
                stroke: "black",
                strokeWidth: 2
              }));
            }
            else
            {
              var topSeats = (Number(seats)-2)/2;
              if(i <= (topSeats+1))
              {
                var top = 0 - ((group.height/2)+25);
                var left = (group.width/(topSeats+1))*i;
                group.add(new fabric.Circle({
                  radius: 15,
                  fill: '#AB1E3E',
                  left: (left - group.width/2)-(group.width/(topSeats+1)),
                  top: top,
                  originX: 'center',
                  originY: 'center',
                  stroke: "black",
                  strokeWidth: 2
                }));
              }
              else
              {
                var top = ((group.height/2)+25);
                var left = (group.width/(topSeats+1))*i;
                group.add(new fabric.Circle({
                  radius: 15,
                  fill: '#AB1E3E',
                  left: (left - group.width/2)-(group.width),
                  top: top,
                  originX: 'center',
                  originY: 'center',
                  stroke: "black",
                  strokeWidth: 2
                }));
              }
            }
          }
          if(type == 'circle')
          {
            var s = Number(seats);
            var radius = (group.width-1)*.65;
            var angle = parseInt(360/s);
            var a = angle * i;
            var left = radius * Math.cos(2 * Math.PI * i / s);
            var top = radius * Math.sin(2 * Math.PI * i / s);

            group.add(new fabric.Circle({
              radius: 15,
              fill: '#AB1E3E',
              left: left,
              top: top,
              originX: 'center',
              originY: 'center',
              stroke: "black",
              strokeWidth: 2
            }));
          }
        }

        c.add(group);
      }

      c.on({
        'mouse:up': function(e) {
          if(guestDrag)
          {
            assignSeat(e.target.id, guestId, e.target.seats);
            console.log("not assigned yet");
          }
          console.log("table: "+e.target.id+" and guest: "+ guestId);
          endDrag();
          throw new Error("Loop holes for days");
        },
        'mouse:move': function(e) {
//          showImageTools(e.target, e.target.id);
        },
        'object:moving': function(e) {
          e.target.set({
            opacity: 0.5
          });
        },
        'object:modified': function(e) {
          e.target.set({
            opacity: 1
          });
          if(e.target.getLeft() <= 0)
          {
            e.target.set({
              left: 0
            });
            e.target.setCoords();
            c.renderAll();
          }
          if(e.target.getTop() <= 0)
          {
            e.target.set({
              top: 0
            });
            e.target.setCoords();
            c.renderAll();
          }
          if(e.target.getTop() >= c.height - (e.target.height/2))
          {
            e.target.set({
              top: c.height - (e.target.height)
            });
            e.target.setCoords();
            c.renderAll();
          }
          if(e.target.getLeft() >= c.width - 50)
          {
            e.target.set({
              left: c.width - (e.target.width)
            });
            e.target.setCoords();
            c.renderAll();
          }
          var size;
          if(e.target.kind == 'circle')
          {
            size = (e.target.getWidth()/2)-1;
          }
          else
          {
            size = e.target.getWidth()+":"+ e.target.getHeight();
          }
          var pos = e.target.getLeft()+":"+ e.target.getTop()+":" + e.target.getAngle();

          updateTable(e.target.kind, e.target.name, pos, size, e.target.id, e.target.seats);
        }
      });

        <% @tables.each do |tab| %>
          create('<%= tab.kind %>', '<%= tab.name %>', '<%= tab.position %>','<%= tab.size %>','<%= tab.id %>','<%= tab.num_of_seats %>');
        <% end %>

      function updateTable(type, name, pos, size, id, seats)
      {
        $.ajax({
          type: "POST",
          contentType: "application/json; charset=utf-8",
          url: "/tables/"+id,
          data : JSON.stringify({position:""+pos, size: ""+size, kind: ""+type, name: ""+name, num_of_seats: ""+seats}),
          dataType: "json",
          success: function (result) {
            console.log('success!!');
          },
          error: function (){
            console.log("something wrong!");
          }
        });
      }

      var KEYCODE_E = 69;
      var KEYCODE_DEL = 46;

      window.onkeydown = handleKeyDown;

      function handleKeyDown(evt) {
        if(!evt){ var evt = window.event; }  //browser compatibility
        switch(evt.keyCode) {
          case KEYCODE_DEL:
              console.log("deleting...");
              var activeObject = c.getActiveObject();
              if (activeObject)
              {
                console.log(activeObject.name);
                c.remove(activeObject);
                $.ajax({
                  type: "DELETE",
                  contentType: "application/json; charset=utf-8",
                  url: "/tables/"+activeObject.id,
                  success: function (result) {
                    console.log('success!!');
                  },
                  error: function (){
                    console.log("something wrong!");
                    window.location.reload(true);
                  }
                });
              }
            break;
          case KEYCODE_E:
            var activeObject = c.getActiveObject();
            if (activeObject)
            {
              editTable(activeObject.id);
            }
            break;
        }
      }

      function editTable(id) {
        function popupwindow(part1, part2, title, w, h) {
          var left = (screen.width/2)-(w/2);
          var top = (screen.height/2)-(h/2);
          popupWindow =  window.open(part1+id+part2, title, 'toolbar=no, location=no, directories=no, status=no, menubar=no, resizable=no, copyhistory=no, width='+w+', height='+h+', top='+top+', left='+left);
          return popupWindow
        }
        popupwindow('<%= "/tables/" %>', '<%= "/edit" %>', 'Edit Table', 600, 600);
      }

      function assignSeat(tableId, id, seats)
      {
        console.log("init");
        console.log(<% @answer %>);

//        $.ajax({
//          type: "POST",
//          contentType: "application/json; charset=utf-8",
//          url: "/isValid",
//          data : JSON.stringify({tableId: ""+tableId, guestId: ""+id, seats: ""+seats}),
//          dataType: "json",
//          success: function (result) {
//            console.log("success woo!!");
//          },
//          error: function (){
//            console.log();
////            window.location.reload(true);
//          }
//        });


      }


//      $.ajax({
//          type: "PUT",
//          contentType: "application/json; charset=utf-8",
//          url: "/guest_lists/"+id,
//          data : JSON.stringify({assigned: ""+tableId, guestId: ""+id, seats: ""+seats}),
//          dataType: "json",
//          success: function (result) {
//            console.log("success!!");
//          },
//          error: function (){
//            console.log("something wrong!");
//            window.location.reload(true);
//          }
//        });
//      }

      function isValid(tableChairs, guests)
      {
        if(Number(guests) > Number(tableChairs))
        {
          alert("There are not enough seats at that table for this guest");
          return false;
        }
        else
        {
          return true;
        }

      }

      function createTable() {
        function popupwindow(url, title, w, h) {
          var left = (screen.width/2)-(w/2);
          var top = (screen.height/2)-(h/2);
          popupWindow =  window.open(url, title, 'toolbar=no, location=no, directories=no, status=no, menubar=no, resizable=no, copyhistory=no, width='+w+', height='+h+', top='+top+', left='+left);
          return popupWindow
        }
        popupwindow('<%= "/tables/new" %>', 'Create Table', 600, 600);
      }

      function showImageTools (e, id) {


        if (!$('#imageDialog').length) {
          $('body').append("<div id='imageDialog' style='position: absolute; top: 0; left: 0'><ul><% @guest_lists.each do |guest_list| %><% @all.each do |guest| %><% if guest.group_id == guest_list.group_id %><% @numInGroup += 1 %><% end %><% end %><% if @numInGroup == 1 %><% if guest_list.assigned != '0' %><li><%= guest_list.name %></li><% end %><% else %><% if guest_list.assigned != '0' %><li><%= guest_list.name %> + <%= @numInGroup-1 %></li><% end %><% end %><% @numInGroup = 0 %><% end %></ul></div>");
        }
        moveImageTools(e);
      }

      function moveImageTools (e) {
        var w = $('#imageDialog').width();
        var h = $('#imageDialog').height();
        var coords = getObjPosition(e);
        var top = coords.bottom - h - 1;
        var left = coords.right - w - 1;
        $('#imageDialog').show();
        $('#imageDialog').css({top: top, left: left});
      }

      function getObjPosition (e) {
        var rect = e.getBoundingRect();
        var offset = c.calcOffset();
        var bottom = offset._offset.top + rect.top + rect.height;
        var right = offset._offset.left + rect.left + rect.width;
        var left = offset._offset.left + rect.left;
        var top = offset._offset.top + rect.top;
        return {left: left, top: top, right: right, bottom: bottom};
      }

    </script>

    <aside id="tools">
      <p id="head">Tools</p>
      <section id="create_table">
        <button type="submit" id="new_table" onclick="createTable()">+ New Table</button>
        <p id="help">(To edit, select table and press 'E')</p>
        <p id="help">(To delete, select table and press 'DEL')</p>
      </section>
    </aside>

  </section>
</body>
<footer>
  <p id="congrats">Congratulations!</p>
  <p>Copyright &#169; 2016 Your Day Your Way&#8482; by <a target="_blank" href="https://www.linkedin.com/in/tracie-wamsley-a0435b107">Tracie Wamsley</a> All Rights Reserved Images from <a target="_blank" href="https://www.flickr.com/">Flickr</a></p>
</footer>
</html>